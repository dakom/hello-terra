# Run like: cargo make [dev/release] 

###################
## Config        ##
###################

[config]
skip_core_tasks = true
default_to_workspace = false

[env]
DOCKER_BUILDKIT = "1"
CARGO_MAKE_SCRIPT_FORCE_PIPE_STDIN = true


env_files = ["./.env"]

##########################
##  GENERIC             ##
##########################
[tasks.make-paths]
script_runner = "@duckscript"
script = ["mkdir ./frontend/media/contracts"] 

##########################
##  HIGH-LEVEL ALL      ##
##########################

[tasks.build-release]
run_task = { name = [
    "frontend-build",
    "contracts-build-release",
    "build-copy-files",
]}

[tasks.frontend-build]
run_task = { name = [
    "frontend-build-npm",
    "frontend-build-iframe-npm",
]}

[tasks.contracts-build-release]
run_task = { name = [
    "contract-registry-build-release",
]}

[tasks.contracts-test]
run_task = { name = [
    "contract-registry-test",
]}

[tasks.build-copy-files]
script_runner = "@shell"
script = '''
cp ./dist/frontend/index.html ./dist/frontend/404.html
cp -R ./frontend/iframe/build/ ./dist/frontend/iframe/
cp -R ./frontend/media/ ./dist/frontend/media/
''' 

##########################
##  FRONTEND            ##
##########################

## Dev
[tasks.frontend-dev]
run_task = { name = [
    "frontend-run-dev-mediaserver",
    "frontend-run-dev-npm",
    "frontend-run-iframe-dev-npm",
], fork = true, parallel = true }

[tasks.frontend-run-dev-mediaserver]
script_runner = "@shell"
script = ["node ./frontend/local-media-server.js"]

[tasks.frontend-run-dev-npm]
script_runner = "@shell"
script = ["npm start"] 

[tasks.frontend-run-iframe-dev-npm]
script_runner = "@shell"
script = ["npm start"] 
cwd = "./frontend/iframe"

## Build

[tasks.frontend-build-npm]
script_runner = "@shell"
script = ["npm run build"] 


[tasks.frontend-build-iframe-npm]
script_runner = "@shell"
script = ["npm run build"] 
cwd = "./frontend/iframe"

##########################
##  CONTRACT - REGISTRY ##
##########################

[tasks.contract-registry-build-release]
run_task = { name = [
    "make-paths",
    "contract-registry-compile-release",
    "contract-registry-optimize-release",
    "contract-registry-hash-release",
]}

[tasks.contract-registry-compile-release]
command = "cargo"
args = ["build", "--release", "--target", "wasm32-unknown-unknown", "--locked"]
cwd = "./contracts/registry"
env = { RUSTFLAGS = "-C link-arg=-s" }

[tasks.contract-registry-optimize-release]
command = "wasm-opt"
args = ["-Os", "./target/wasm32-unknown-unknown/release/contract_registry.wasm", "-o", "./frontend/media/contracts/contract-registry.wasm"] 


[tasks.contract-registry-hash-release]
script_runner = "@shell"
script = ["b3sum --no-names ./frontend/media/contracts/contract-registry.wasm > ./frontend/media/contracts/contract-registry-hash.txt"] 